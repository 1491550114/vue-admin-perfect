import Fuse from 'fuse.js';
import { ComputedRef, Ref } from 'vue-demi';
declare type MaybeReactiveList<T> = ComputedRef<Array<T>> | Array<T> | Ref<Array<T>> | Ref<null> | Ref<null | Array<T>>;
export declare class VueFuse<T> {
    fuse: Ref<Fuse<T>>;
    resultsRaw: Ref<Fuse.FuseResult<T>[]>;
    results: ComputedRef<Array<T>>;
    search: Ref<string>;
    noResults: ComputedRef<boolean>;
    runSearch: (search?: string | null) => void;
    loadItems: (items: T[]) => void;
    constructor(list: MaybeReactiveList<T>, options?: Fuse.IFuseOptions<T>);
}
export declare function useVueFuse<T>(list: MaybeReactiveList<T>, options?: Fuse.IFuseOptions<T>): VueFuse<T>;
export {};
